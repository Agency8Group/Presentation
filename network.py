import time
import random
import sys
import os
from colorama import init, Fore, Back, Style

init()

def print_with_delay(text, delay=0.03, color=Fore.WHITE):
    for char in text:
        print(char, end='', flush=True)
        time.sleep(delay)
    print()

def print_command(command, color=Fore.GREEN):
    print(f"{Fore.CYAN}admin@network:~$ {color}{command}{Style.RESET_ALL}")
    time.sleep(0.5)

def print_error(text, delay=0.02):
    for char in text:
        print(f"{Fore.RED}{char}", end='', flush=True)
        time.sleep(delay)
    print(f"{Style.RESET_ALL}")

def print_warning(text, delay=0.02):
    for char in text:
        print(f"{Fore.YELLOW}{char}", end='', flush=True)
        time.sleep(delay)
    print(f"{Style.RESET_ALL}")

def simulate_network_scan():
    print_command("nmap -sP 192.168.1.0/24")
    print_with_delay("Starting Nmap 7.80 ( https://nmap.org ) at 2024-01-15 14:30:00 UTC", 0.02)
    print_with_delay("Nmap scan report for 192.168.1.1", 0.02)
    print_with_delay("Host is up (0.0023s latency).", 0.02)
    print_with_delay("MAC Address: 00:11:22:33:44:55 (Router)", 0.02)
    print_with_delay("Nmap scan report for 192.168.1.10", 0.02)
    print_with_delay("Host is up (0.0015s latency).", 0.02)
    print_with_delay("MAC Address: AA:BB:CC:DD:EE:FF (Workstation)", 0.02)
    print_with_delay("Nmap scan report for 192.168.1.20", 0.02)
    print_with_delay("Host is up (0.0018s latency).", 0.02)
    print_with_delay("MAC Address: 11:22:33:44:55:66 (Server)", 0.02)
    print_with_delay("Nmap done: 256 IP addresses (3 hosts up) scanned in 12.34 seconds", 0.02)
    time.sleep(2)

def simulate_port_scan():
    print_command("nmap -sS -p 1-1000 192.168.1.20")
    print_with_delay("Starting Nmap 7.80 ( https://nmap.org ) at 2024-01-15 14:32:00 UTC", 0.02)
    print_with_delay("Nmap scan report for 192.168.1.20", 0.02)
    print_with_delay("Host is up (0.0018s latency).", 0.02)
    print_with_delay("Not shown: 997 closed ports", 0.02)
    print_with_delay("PORT     STATE SERVICE", 0.02)
    print_with_delay("22/tcp   open  ssh", 0.02)
    print_with_delay("80/tcp   open  http", 0.02)
    print_with_delay("443/tcp  open  https", 0.02)
    print_with_delay("3306/tcp open  mysql", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Nmap done: 1 IP address (1 host up) scanned in 45.67 seconds", 0.02)
    time.sleep(2)

def simulate_traffic_analysis():
    print_command("tcpdump -i eth0 -c 20")
    print_with_delay("tcpdump: verbose output suppressed, use -v or -vv for full protocol decode", 0.02)
    print_with_delay("listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes", 0.02)
    print_with_delay("14:35:01.123456 IP 192.168.1.10.54321 > 192.168.1.20.80: Flags [S], seq 1234567890, win 65535, options [mss 1460], length 0", 0.02)
    print_with_delay("14:35:01.123789 IP 192.168.1.20.80 > 192.168.1.10.54321: Flags [S.], seq 9876543210, ack 1234567891, win 65535, options [mss 1460], length 0", 0.02)
    print_with_delay("14:35:01.124123 IP 192.168.1.10.54321 > 192.168.1.20.80: Flags [.], ack 9876543211, win 65535, length 0", 0.02)
    print_with_delay("14:35:01.124456 IP 192.168.1.10.54321 > 192.168.1.20.80: Flags [P.], seq 1234567891:1234567941, ack 9876543211, win 65535, length 50", 0.02)
    print_with_delay("14:35:01.124789 IP 192.168.1.20.80 > 192.168.1.10.54321: Flags [.], ack 1234567941, win 65535, length 0", 0.02)
    print_with_delay("14:35:01.125123 IP 192.168.1.20.80 > 192.168.1.10.54321: Flags [P.], seq 9876543211:9876543271, ack 1234567941, win 65535, length 60", 0.02)
    print_with_delay("14:35:01.125456 IP 192.168.1.10.54321 > 192.168.1.20.80: Flags [.], ack 9876543271, win 65535, length 0", 0.02)
    print_with_delay("14:35:01.125789 IP 192.168.1.10.54321 > 192.168.1.20.80: Flags [F.], seq 1234567941, ack 9876543271, win 65535, length 0", 0.02)
    print_with_delay("14:35:01.126123 IP 192.168.1.20.80 > 192.168.1.10.54321: Flags [F.], seq 9876543271, ack 1234567942, win 65535, length 0", 0.02)
    print_with_delay("14:35:01.126456 IP 192.168.1.10.54321 > 192.168.1.20.80: Flags [.], ack 9876543272, win 65535, length 0", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("20 packets captured", 0.02)
    print_with_delay("20 packets received by filter", 0.02)
    print_with_delay("0 packets dropped by kernel", 0.02)
    time.sleep(2)

def simulate_bandwidth_monitoring():
    print_command("iftop -t -s 10")
    print_with_delay("interface: eth0", 0.02)
    print_with_delay("IP address is: 192.168.1.20", 0.02)
    print_with_delay("MAC address is: 11:22:33:44:55:66", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("   Host name            Port    => <=   Total", 0.02)
    print_with_delay("   192.168.1.10        54321   => <=   1.2Mb", 0.02)
    print_with_delay("   192.168.1.1         80      => <=   2.1Mb", 0.02)
    print_with_delay("   8.8.8.8             53      => <=   0.1Mb", 0.02)
    print_with_delay("   1.1.1.1             443     => <=   0.5Mb", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Total send rate:         4.2Mb", 0.02)
    print_with_delay("Total receive rate:      3.9Mb", 0.02)
    print_with_delay("Total send and receive:  8.1Mb", 0.02)
    time.sleep(2)

def simulate_router_config():
    print_command("telnet 192.168.1.1")
    print_with_delay("Trying 192.168.1.1...", 0.02)
    print_with_delay("Connected to 192.168.1.1.", 0.02)
    print_with_delay("Escape character is '^]'.", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Router>", 0.02)
    time.sleep(0.5)
    
    print_command("show interfaces")
    print_with_delay("Interface GigabitEthernet0/0/0", 0.02)
    print_with_delay("  Description: WAN Interface", 0.02)
    print_with_delay("  IP Address: 203.0.113.1/24", 0.02)
    print_with_delay("  Status: up", 0.02)
    print_with_delay("  Protocol: up", 0.02)
    print_with_delay("  Input packets: 1234567", 0.02)
    print_with_delay("  Output packets: 9876543", 0.02)
    print_with_delay("  Input errors: 0", 0.02)
    print_with_delay("  Output errors: 0", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Interface GigabitEthernet0/0/1", 0.02)
    print_with_delay("  Description: LAN Interface", 0.02)
    print_with_delay("  IP Address: 192.168.1.1/24", 0.02)
    print_with_delay("  Status: up", 0.02)
    print_with_delay("  Protocol: up", 0.02)
    print_with_delay("  Input packets: 5678901", 0.02)
    print_with_delay("  Output packets: 4321098", 0.02)
    print_with_delay("  Input errors: 0", 0.02)
    print_with_delay("  Output errors: 0", 0.02)
    time.sleep(2)
    
    print_command("show ip route")
    print_with_delay("Codes: C - connected, S - static, R - RIP, M - mobile, B - BGP", 0.02)
    print_with_delay("       D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area", 0.02)
    print_with_delay("       N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2", 0.02)
    print_with_delay("       E1 - OSPF external type 1, E2 - OSPF external type 2", 0.02)
    print_with_delay("       i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2", 0.02)
    print_with_delay("       ia - IS-IS inter area, * - candidate default, U - per-user static route", 0.02)
    print_with_delay("       o - ODR, P - periodic downloaded static route", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Gateway of last resort is 203.0.113.254 to network 0.0.0.0", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("C    192.168.1.0/24 is directly connected, GigabitEthernet0/0/1", 0.02)
    print_with_delay("C    203.0.113.0/24 is directly connected, GigabitEthernet0/0/0", 0.02)
    print_with_delay("S*   0.0.0.0/0 [1/0] via 203.0.113.254", 0.02)
    time.sleep(2)
    
    print_command("exit")
    print_with_delay("Connection closed by foreign host.", 0.02)
    time.sleep(1)

def simulate_security_audit():
    print_command("nmap -sV -sC 192.168.1.20")
    print_with_delay("Starting Nmap 7.80 ( https://nmap.org ) at 2024-01-15 14:40:00 UTC", 0.02)
    print_with_delay("Nmap scan report for 192.168.1.20", 0.02)
    print_with_delay("Host is up (0.0018s latency).", 0.02)
    print_with_delay("Not shown: 997 closed ports", 0.02)
    print_with_delay("PORT     STATE SERVICE VERSION", 0.02)
    print_with_delay("22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)", 0.02)
    print_with_delay("| ssh-hostkey:", 0.02)
    print_with_delay("|   2048 12:34:56:78:9a:bc:de:f0:12:34:56:78:9a:bc:de:f0 (RSA)", 0.02)
    print_with_delay("|   256 23:45:67:89:ab:cd:ef:01:23:45:67:89:ab:cd:ef:01 (ECDSA)", 0.02)
    print_with_delay("|_  256 34:56:78:9a:bc:de:f0:12:34:56:78:9a:bc:de:f0:12 (ED25519)", 0.02)
    print_with_delay("80/tcp   open  http    nginx 1.18.0 (Ubuntu)", 0.02)
    print_with_delay("|_http-server-header: nginx/1.18.0", 0.02)
    print_with_delay("|_http-title: Welcome to nginx!", 0.02)
    print_with_delay("443/tcp  open  https   nginx 1.18.0", 0.02)
    print_with_delay("|_http-server-header: nginx/1.18.0", 0.02)
    print_with_delay("|_http-title: Welcome to nginx!", 0.02)
    print_with_delay("| ssl-cert: Subject: commonName=localhost", 0.02)
    print_with_delay("| Not valid before: 2023-01-01T00:00:00", 0.02)
    print_with_delay("|_Not valid after:  2024-12-31T23:59:59", 0.02)
    print_with_delay("3306/tcp open  mysql   MySQL 8.0.32-0ubuntu0.20.04.2", 0.02)
    print_with_delay("| mysql-info:", 0.02)
    print_with_delay("|   Protocol: 10", 0.02)
    print_with_delay("|   Version: 8.0.32-0ubuntu0.20.04.2", 0.02)
    print_with_delay("|   Thread ID: 123", 0.02)
    print_with_delay("|   Capabilities flags: 63487", 0.02)
    print_with_delay("|   Some Capabilities: SupportsCompression, SupportsLoadDataLocal, SupportsTransactions, SupportsAuthPlugins, SupportsMultipleResults", 0.02)
    print_with_delay("|   Status: Autocommit", 0.02)
    print_with_delay("|_  Salt: 1234567890abcdef", 0.02)
    print_with_delay("Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .", 0.02)
    print_with_delay("Nmap done: 1 IP address (1 host up) scanned in 67.89 seconds", 0.02)
    time.sleep(3)

def simulate_wireless_scan():
    print_command("iwlist wlan0 scan")
    print_with_delay("wlan0     Scan completed :", 0.02)
    print_with_delay("          Cell 01 - Address: 00:11:22:33:44:55", 0.02)
    print_with_delay("                    ESSID:\"Office_WiFi\"", 0.02)
    print_with_delay("                    Protocol:IEEE 802.11bgn", 0.02)
    print_with_delay("                    Mode:Master", 0.02)
    print_with_delay("                    Frequency:2.412 GHz (Channel 1)", 0.02)
    print_with_delay("                    Encryption key:on", 0.02)
    print_with_delay("                    Bit Rates:6 Mb/s; 9 Mb/s; 12 Mb/s; 18 Mb/s; 24 Mb/s; 36 Mb/s; 48 Mb/s; 54 Mb/s", 0.02)
    print_with_delay("                    Quality=70/70  Signal level=-38 dBm", 0.02)
    print_with_delay("                    Extra: Last beacon: 1234ms ago", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("          Cell 02 - Address: AA:BB:CC:DD:EE:FF", 0.02)
    print_with_delay("                    ESSID:\"Guest_WiFi\"", 0.02)
    print_with_delay("                    Protocol:IEEE 802.11bgn", 0.02)
    print_with_delay("                    Mode:Master", 0.02)
    print_with_delay("                    Frequency:2.437 GHz (Channel 6)", 0.02)
    print_with_delay("                    Encryption key:on", 0.02)
    print_with_delay("                    Bit Rates:6 Mb/s; 9 Mb/s; 12 Mb/s; 18 Mb/s; 24 Mb/s; 36 Mb/s; 48 Mb/s; 54 Mb/s", 0.02)
    print_with_delay("                    Quality=65/70  Signal level=-42 dBm", 0.02)
    print_with_delay("                    Extra: Last beacon: 2345ms ago", 0.02)
    time.sleep(2)

def simulate_firewall_check():
    print_command("iptables -L -n -v")
    print_with_delay("Chain INPUT (policy ACCEPT 1234 packets, 567890 bytes)", 0.02)
    print_with_delay(" pkts bytes target     prot opt in     out     source               destination", 0.02)
    print_with_delay(" 1234 567890 ACCEPT     all  --  lo     *       0.0.0.0/0            0.0.0.0/0", 0.02)
    print_with_delay(" 5678 123456 ACCEPT     all  --  eth0   *       0.0.0.0/0            0.0.0.0/0            state RELATED,ESTABLISHED", 0.02)
    print_with_delay("  123  45678 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:22", 0.02)
    print_with_delay("  456  78901 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:80", 0.02)
    print_with_delay("  234  34567 ACCEPT     tcp  --  eth0   *       0.0.0.0/0            0.0.0.0/0            tcp dpt:443", 0.02)
    print_with_delay("    0     0 DROP       all  --  eth0   *       0.0.0.0/0            0.0.0.0/0", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)", 0.02)
    print_with_delay(" pkts bytes target     prot opt in     out     source               destination", 0.02)
    print_with_delay("", 0.01)
    print_with_delay("Chain OUTPUT (policy ACCEPT 9876 packets, 1234567 bytes)", 0.02)
    print_with_delay(" pkts bytes target     prot opt in     out     source               destination", 0.02)
    print_with_delay(" 9876 1234567 ACCEPT     all  --  *      *       0.0.0.0/0            0.0.0.0/0", 0.02)
    time.sleep(2)

def main():
    print(f"{Fore.CYAN}=== 네트워크 모니터링 ==={Style.RESET_ALL}")
    print()
    
    simulate_network_scan()
    print()
    
    simulate_port_scan()
    print()
    
    simulate_traffic_analysis()
    print()
    
    simulate_bandwidth_monitoring()
    print()
    
    simulate_router_config()
    print()
    
    simulate_security_audit()
    print()
    
    simulate_wireless_scan()
    print()
    
    simulate_firewall_check()
    print()

if __name__ == "__main__":
    main() 